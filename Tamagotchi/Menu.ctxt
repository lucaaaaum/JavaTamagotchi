#BlueJ class context
comment0.target=Menu
comment0.text=\r\n\ Esta\ classe\ fica\ respons\u00E1vel\ por\ gerenciar\ a\ maioria\ das\ impress\u00F5es\ do\r\n\ jogo,\ em\ especial\ a\ dos\ blocos\ de\ menu\ com\ op\u00E7\u00F5es.\r\n
comment1.params=nome\ descricaoEvento\ opcoes\ tamanho
comment1.target=Menu(java.lang.String,\ java.lang.String,\ java.lang.String[],\ int)
comment1.text=\r\n\ Todo\ menu\ necessariamente\ precisa\ ter\ um\ nome,\ uma\ descri\u00E7\u00E3o,\ as\ op\u00E7\u00F5es\ e\r\n\ um\ tamanho\ m\u00E1ximo\ para\ a\ caixa\ de\ texto.\ Este\ tamanho\ m\u00E1ximo\ \u00E9\ fornecido\r\n\ pela\ classe\ "Parametros".\r\n
comment10.params=opcoes
comment10.target=void\ setOpcoes(java.lang.String[])
comment11.params=tamanho
comment11.target=void\ setTamanho(int)
comment12.params=
comment12.target=java.lang.String\ getDescricaoEvento()
comment13.params=
comment13.target=java.lang.String[]\ getOpcoes()
comment14.params=
comment14.target=int\ getTamanho()
comment2.params=tempo
comment2.target=void\ imprimirMenu(int)
comment2.text=\r\n\ M\u00E9todo\ principal\ da\ classe.\ Pode\ ser\ chamado\ por\ qualquer\r\n\ um\ para\ que\ seja\ impresso\ determinado\ menu.\r\n
comment3.params=tamanho\ tempo
comment3.target=void\ imprimeDivisoria(int,\ int)
comment4.params=tamanho\ texto\ tempo
comment4.target=void\ imprimeTexto(int,\ java.lang.String,\ int)
comment4.text=\r\n\ Imprime\ um\ peda\u00E7o\ de\ texto.\ Ele\ valida\ o\ tamanho\ m\u00E1ximo\r\n\ da\ caixa\ de\ di\u00E1logo\ e\ quebra\ a\ linha\ caso\ o\ texto\ seja\r\n\ muito\ grande.\ Tamb\u00E9m\ \u00E9\ utilizado\ o\ par\u00E2metro\ "tempo",\ garantindo\r\n\ um\ delay\ ap\u00F3s\ a\ impress\u00E3o\ de\ cada\ caracter.\r\n
comment5.params=tamanho\ tempo
comment5.target=void\ imprimeOpcoes(int,\ int)
comment5.text=\r\n\ Este\ m\u00E9todo\ \u00E9\ bem\ simples.\ Ele\ pega\ a\ lista\r\n\ de\ op\u00E7\u00F5es\ do\ menu\ e\ chama\ o\ m\u00E9todo\ imprimeTexto\r\n\ para\ imprimir\ a\ op\u00E7\u00E3o.\r\n
comment6.params=tamanho\ titulo\ tempo
comment6.target=void\ imprimeTitulo(int,\ java.lang.String,\ int)
comment6.text=\ \r\n\ Semelhante\ ao\ m\u00E9todo\ imprimeDivisoria,\r\n\ mas\ permite\ a\ inser\u00E7\u00E3o\ de\ um\ texto\ no\ meio\ da\ linha.\r\n\ A\ vari\u00E1vel\ "caracteresRestantes"\ serve\ apenas\ para\ determinar\r\n\ quantos\ caracteres\ faltam\ do\ final\ do\ t\u00EDtulo\ ao\ final\ da\ caixa.\r\n
comment7.params=tempo
comment7.target=void\ delay(int)
comment7.text=\ \r\n\ Conforme\ o\ exerc\u00EDcio\ do\ cron\u00F4metro,\ este\ m\u00E9todo\ usa\r\n\ como\ base\ um\ par\u00E2metro\ chamado\ "tempo",\ obrigando\r\n\ o\ sistema\ a\ parar\ durante\ estes\ milisegundos.\ \u00C9\ utilizado\r\n\ na\ impress\u00E3o\ de\ cada\ caracter\ do\ jogo,\ exceto\ nos\ t\u00EDtulos.\r\n
comment8.params=caracteresRestantes\ caracter
comment8.target=void\ preencherLinha(int,\ char)
comment8.text=\r\n\ Esta\ parte\ fica\ respons\u00E1vel\ por\ preencher\r\n\ o\ restante\ da\ linha,\ caso\ n\u00E3o\ seja\ preenchida\ pelos\r\n\ caracteres\ do\ texto.\ Recebe\ como\ par\u00E2metro\ a\ quantidade\ de\r\n\ caracteres\ a\ serem\ inseridos\ e\ o\ caracter\ desejado.\r\n
comment9.params=descricaoEvento
comment9.target=void\ setDescricaoEvento(java.lang.String)
numComments=15
